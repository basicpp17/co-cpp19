name: Conan-Tests

on: push

jobs:
  Conan-Tests-Windows:
    name: Conan-tests-Windows
    runs-on: "windows-latest"
    steps:
      - name: Install Conan
        uses: turtlebrowser/get-conan@main

      - name: install CMake
        uses: lukka/get-cmake@latest

      - name: Install MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Checkout source
        uses: actions/checkout@v3

      - name: Create conan package
        run: |
          cd conan
          conan create . --build=missing --profile profiles/msvc2022

      - name: Test package components
        shell: pwsh
        run: |
          foreach ($folder in (Get-ChildItem -Path ./conan/tests -Directory | Foreach-Object {$_.Name})) {
              echo "Running ${folder}"
              & script\test_conan.bat "${folder}" --profile "$pwd/conan/profiles/msvc2022"
              if ($LASTEXITCODE -ne 0) {
                exit(1)
              }
          }

  # TODO: need new docker images - gcc12-ubuntu-22.04-cmake-3.25.2-conan-1.57
  # Conan-Tests-Linux:
  #   name: Conan-tests-linux
  #   runs-on: "ubuntu-latest"

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         # - image: "conanio/gcc12-ubuntu18.04:latest"
  #         # - image: "ghcr.io/fettpet/clang-conan-cmake-dockercontainer:latest-clang11"
  #         #   ConanExtra: "-s compiler.libcxx=libc++"
  #         # - image: "ghcr.io/fettpet/clang-conan-cmake-dockercontainer:latest-clang12"
  #         #   ConanExtra: "-s compiler.libcxx=libc++"
  #         # - image: "ghcr.io/fettpet/clang-conan-cmake-dockercontainer:latest-clang13"
  #         #   ConanExtra: "-s compiler.libcxx=libc++"
  #   steps:
  #     - name: Checkout source
  #       uses: actions/checkout@v3

  #     - name: Create Conan home folder
  #       shell: pwsh
  #       run: |
  #         $DIRECTORY_PATH=Join-Path ${Env:RUNNER_TEMP} conanserver
  #         echo "DIRECTORY_PATH=${DIRECTORY_PATH}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
  #         if (!(Test-Path -path $DIRECTORY_PATH)) {
  #             New-Item -ItemType directory -Path $DIRECTORY_PATH
  #         }

  #     - name: Create conan package
  #       shell: pwsh
  #       run: |
  #         docker run --network="host" --rm  -v ${env:GITHUB_WORKSPACE}:/project -v ${env:DIRECTORY_PATH}:/conan -w /project/conan ${{ matrix.image }} conan create . --build=gtest --build=co-cpp19 ${{ matrix.ConanExtra }}

  #     - name: Test package components
  #       shell: pwsh
  #       run: |
  #         [array]$folders=Get-ChildItem -Path conan/tests -Directory -Name
  #         foreach ($folder in $folders) {
  #             docker run --network="host" --rm -v ${env:GITHUB_WORKSPACE}:/project -v ${env:DIRECTORY_PATH}:/conan -w /project ${{ matrix.image }} script/test_conan.sh ${folder} ${{ matrix.ConanExtra }}
  #             if (!$?) {
  #               exit(1)
  #             }
  #         }
